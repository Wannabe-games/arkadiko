DB_NAME=arkadiko_api_development
DB_USER=arkadiko_api
DB_PASSWORD=arkadiko_api

db-run:
	@echo "Running database..."
	docker compose up -d postgres

db-init: db-run
	@echo "游누 Initializing database.."
	sleep 10
	make db-create
	make db-create-role
	make db-set-owner
	make db-seeds

db-create:
	@echo "游누 Creating database..."
	docker compose exec -u postgres postgres psql -c "CREATE DATABASE $(DB_NAME);"

db-create-role:
	@echo "游누 Creating role..."
	docker compose exec -u postgres postgres psql -c "CREATE ROLE $(DB_USER) WITH LOGIN PASSWORD '$(DB_PASSWORD)';"

db-set-owner:
	@echo "游누 Setting owner..."
	docker compose exec -u postgres postgres psql -c "ALTER DATABASE $(DB_NAME) OWNER TO $(DB_USER);"

db-seeds: app-run-migrations
	@echo "游누 Running seeds..."
	docker compose run -T --rm api rails console < db/seeds.rb

pg_data: db-run
	@echo "游누 pg_data persistent volume creation"

app-run-migrations: db-run
	@echo "游누 Running migrations..."
	# docker compose run --rm api rails db:create
	docker compose run --rm api rails db:migrate

app-run: db-run
	@echo "游누 Running API..."
	docker compose up -d api

app-stop:
	@echo "游누 Stopping API..."
	docker compose down api

app-restart:
	@echo "游누 Restarting API..."
	docker compose down api
	docker compose up -d api

logs:
	docker compose logs -f

purge:
	@echo "游누 Purging..."
	@echo "Are you sure? [y/N] " && read ans && [ $${ans:-N} = y ]
	docker compose down --volumes
	rm -rf pg_data || sudo rm -rf pg_data

PHONY: purge db-run db-create db-init db-create-role db-set-owner app-run-migrations app-run app-stop app-restart logs